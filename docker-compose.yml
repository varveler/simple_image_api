version: '3.8'
services:
    db:
        image: postgres:13
        restart: always
        container_name: db
        hostname: db
        env_file: ./docker/db/.env
        volumes:
            - db_data:/var/lib/postgresql/
        healthcheck:
            test: ["CMD", "pg_isready", "-q", "-d", "images", "-U", "djangoimages"]
            interval: 8s
            timeout: 5s
            retries: 7
        networks:
            - djangonetwork
    backend:
        build:
            context: ./src/
            dockerfile: Dockerfile
        container_name: api_backend
        hostname: api_backend
        command: sh -c "python3 manage.py collectstatic --noinput && python3 manage.py migrate --noinput && /usr/local/bin/gunicorn image_api.wsgi:application -w 3 -b :8000 --reload --log-level debug --timeout 90"
        ports:
            - "8000:8000"
        volumes:
            - ./src:/src
        env_file:
            - ./src/.env.dev
        depends_on:
            db:
              condition: service_healthy
        links:
            - db
            - rabbit
        networks:
            - djangonetwork
    nginx:
        build: 
            context: ./docker/nginx
            dockerfile: dev-Dockerfile
        container_name: api_nginx
        hostname: api_nginx        
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"    
        ports:
            - "80:80"
        volumes:
            - /www/static #static volume
            - ./docker/nginx/default.dev.conf:/etc/nginx/conf.d/default.conf
        volumes_from:
            - backend
        links:
            - backend:backend
        networks:
            - djangonetwork
    rabbit:
        image: rabbitmq:latest
        hostname: rabbitMQ
        container_name: rabbitMQ
        env_file: ./docker/rabbit/.env
        ports:
          - "5672:5672"
        expose:
          - "5672"
        healthcheck:
            test: rabbitmq-diagnostics -q ping
            interval: 15s
            timeout: 10s
            retries: 7
        networks:
            - djangonetwork
    # Celery Worker
    worker:
        build:
            context: ./src/
            dockerfile: Dockerfile
        command: celery -A image_api worker -l info
        container_name: api_worker
        hostname: api_worker
        volumes:
            - ./src:/src
        links:
            - db
            - rabbit
        env_file:
            - ./src/.env.dev
        environment:
          - LC_ALL=C.UTF-8
          - LANG=C.UTF-8
        depends_on:
            rabbit:
              condition: service_healthy
            db:
              condition: service_healthy
        networks:
            - djangonetwork
    # Celery beat
    beat:
        build:
            context: ./src/
            dockerfile: Dockerfile
        command: [ "celery", "-A", "image_api", "beat", "-l", "info", "-S", "django"]
        container_name: api_beat
        hostname: api_beat
        volumes:
            - ./src:/src
        links:
            - db
            - rabbit
        env_file:
            - ./src/.env.dev
        environment:
          - LC_ALL=C.UTF-8
          - LANG=C.UTF-8
        depends_on:
            db:
              condition: service_healthy
            rabbit:
              condition: service_healthy
        networks:
            - djangonetwork
volumes:
    db_data:
networks:
    djangonetwork:
        driver: bridge
